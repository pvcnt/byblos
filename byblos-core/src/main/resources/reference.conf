byblos {
  vocabulary {
    words = [
      // Sample entry:
      //{
      //  // Name of the operator, users would call `:$name`
      //  name = "square"
      //
      //  // Expression for this word
      //  body = ":dup,:mul"
      //}
    ]

    // Helpers to compute an average based on a specified denominator query
    custom-averages = [
      // Sample entry:
      //{
      //  // Name of the operator, users would call `:$name`
      //  name = "node-avg"
      //
      //  // Query that is used for the denominator in the average
      //  base-query = "name,numInstances,:eq"
      //
      //  // Set of tags that are available for use on the denominator. These
      //  // will be used to extract common scope from the numerator query and
      //  // validate the group by behavior.
      //  keys = ["app", "cluster", "asg"]
      //}
    ]
  }
  chart {
      // Allows arbitrary rendering hints to be set on the graphics object used for the chart.
      // See the javadocs for more information on available options:
      // http://docs.oracle.com/javase/7/docs/api/java/awt/RenderingHints.html
      rendering-hints {
        KEY_RENDERING = "VALUE_RENDER_SPEED"
        KEY_TEXT_ANTIALIASING = "VALUE_TEXT_ANTIALIAS_LCD_HRGB"
      }

      // Control the base fonts used. This setting is to allow for some experimentation and may
      // go away if moved into per-chart options.
      //
      // To ensure consistent rendering for tests across versions of the JDK and operating
      // systems we include the Apache licensed RobotoMono font.
      fonts {
        monospace = "fonts/RobotoMono-Regular.ttf"
      }

      theme {
        light {
          image {
            background-color = "FFF5F5F5"
            background-stroke = "solid"
            line-color = "FF000000"
            line-stroke = "solid"
            text-color = "FF000000"
            text-stroke = "solid"
          }
          canvas = ${byblos.chart.theme.light.image} {
            background-color = "FFFFFFFF"
          }
          minor-grid = ${byblos.chart.theme.light.image} {
            line-color = "5FABABAB"
            line-stroke = "dashed"
          }
          major-grid = ${byblos.chart.theme.light.image} {
            line-color = "5FFF5B5B"
            line-stroke = "dashed"
          }
          axis = ${byblos.chart.theme.light.image}
          legend = ${byblos.chart.theme.light.canvas}
          warnings = ${byblos.chart.theme.light.image} {
            background-color = "FFFFC800"
          }
        }

        dark {
          image {
            background-color = "FF0A0A0A"
            background-stroke = "solid"
            line-color = "FFFFFFFF"
            line-stroke = "solid"
            text-color = "FFFFFFFF"
            text-stroke = "solid"
          }
          canvas = ${byblos.chart.theme.dark.image} {
            background-color = "FF000000"
          }
          minor-grid = ${byblos.chart.theme.dark.image} {
            line-color = "5FABABAB"
            line-stroke = "dashed"
          }
          major-grid = ${byblos.chart.theme.dark.image} {
            line-color = "5FFF5B5B"
            line-stroke = "dashed"
          }
          axis = ${byblos.chart.theme.dark.image}
          legend = ${byblos.chart.theme.dark.canvas}
          warnings = ${byblos.chart.theme.dark.image} {
            background-color = "FFFFC800"
            text-color = "FF000000"
          }
        }
      }

      // Limits on image rendering to ensure
      limits {
        min-canvas-width = 64
        min-canvas-height = 64

        max-width = 2000
        max-height = 1000
        max-lines-in-legend = 50
        max-yaxes = 4
      }
  }
  eval {
      backend {
        class = "dev.byblos.eval.backend.PrometheusBackend"
        endpoint = "https://demo.promlabs.com"
        auth = "none"
    }

    graph {
      step = 1 minute

      start-time = e-3h
      end-time = now
      timezone = US/Pacific
      width = 700
      height = 300
      theme = "light"

      // Settings for light theme
      light {
        palette = "armytage"
        named-colors = {
          blue1 = "6BAED6"
          blue2 = "2171B5"
          blue3 = "08306B"

          gray1 = "888888"
          gray2 = "444444"
          gray3 = "000000"

          green1 = "74C476"
          green2 = "238B45"
          green3 = "00441B"

          orange1 = "FD8D3C"
          orange2 = "D94801"
          orange3 = "7F2704"

          purple1 = "9E9AC8"
          purple2 = "6A51A3"
          purple3 = "3F007D"

          red1 = "FB6A4A"
          red2 = "CB181D"
          red3 = "67000D"
        }
      }

      // Settings for dark theme
      dark {
        palette = "light24"
        named-colors = {
          blue1 = "C6DBEF"
          blue2 = "6BAED6"
          blue3 = "2171B5"

          gray1 = "FFFFFF"
          gray2 = "BBBBBB"
          gray3 = "777777"

          green1 = "C7E9C0"
          green2 = "74C476"
          green3 = "238B45"

          orange1 = "FDD0A2"
          orange2 = "FD8D3C"
          orange3 = "D94801"

          purple1 = "DADAEB"
          purple2 = "9E9AC8"
          purple3 = "6A51A3"

          red1 = "FCBBA1"
          red2 = "FB6A4A"
          red3 = "CB181D"
        }
      }

      // Don't permit more that 1440 datapoints (1 day at minute resolution) for a single chart
      max-datapoints = 1440

      // Set of output formats to support via the chart API
      engines = [
        "dev.byblos.chart.CommaSepGraphEngine",
        "dev.byblos.chart.PngGraphEngine",
        "dev.byblos.chart.SvgGraphEngine",
        "dev.byblos.chart.StatsJsonGraphEngine",
        "dev.byblos.chart.StdJsonGraphEngine",
        "dev.byblos.chart.TabSepGraphEngine",
      ]

      // Vocabulary to use for the graph API. The value can be "default" or a class representing
      // the vocabulary to use.
      vocabulary = "default"

      // If set to true, the graph uri will be encoded as a Source iTXt field in the generated
      // png image. This can be useful for debugging and possibly other tooling, but increases
      // the image sizes and may not be desirable if the image may be shared externally.
      png-metadata-enabled = false

      // Pattern to use to detect that a user-agent is a web-browser
      browser-agent-pattern = "mozilla|msie|gecko|chrome|opera|webkit"
    }
  }
}